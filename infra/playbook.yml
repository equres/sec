---
- hosts: "{{ host_names | default('all')}}"
  become: yes
  vars:
      ansible_ssh_user: "{{ ssh_user | default('root')}}"
      postgresql_data_dir: /mnt/sec/db
      postgresql_global_config_options:
        - option: data_directory
          value: "/mnt/sec/db"
  vars_files:
    - ./playbook_vars.yml
  tasks:
    - name: Set Timezone To Los Angeles
      become: yes
      become_user: root
      become_method: sudo
      community.general.timezone:
        name: America/Los_Angeles
    - name: Create SEC Group
      become: yes
      become_user: root
      become_method: sudo
      group:
        name: sec
        state: present
    - name: Create SEC User
      become: yes
      become_user: root
      become_method: sudo
      user: name=sec state=present groups="sec"
    - name: Update Golang From Apt
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.apt_repository:
        repo: ppa:longsleep/golang-backports
    - name: Update Postgres From Apt
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.apt_repository:
        update_cache: no
        repo: "deb http://apt.postgresql.org/pub/repos/apt focal-pgdg main"
        state: present
    - name: Add Postgres Key
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present
    - name: Install Necessities
      become: yes
      become_user: root
      become_method: sudo
      apt:
        update_cache: yes
        name:
          - software-properties-common
          - postgresql-14
          - python3
          - git
          - make
          - vim
          - tig
          - ncdu
          - htop
          - tmux
          - jq
          - curl     
          - acl
          - python3-pip
          - python3-psycopg2     
          - golang-go
          - zip
          - unzip
          - debian-keyring 
          - debian-archive-keyring 
          - apt-transport-https
          - monit
          - syslog-ng
          - lftp
          - redis
          - nginx
          - certbot
          - python3-certbot-nginx
          - awstats
          - libgeoip-dev
          - build-essential
          - mailutils
    - name: Create /mnt/sec Directory
      become: yes
      become_user: root
      become_method: sudo
      file:
        path: /mnt/sec
        state: directory
        owner: sec
        group: sec
        mode: '0755'
    - name: Create /var/www/equres Directory
      become: yes
      become_user: root
      become_method: sudo
      file:
        path: /var/www/equres
        state: directory
        mode: '0755'
        owner: sec
    - name: Create /.config/sec Directory
      become: yes
      become_user: root
      become_method: sudo
      file:
        path: /home/sec/.config/sec
        state: directory
        owner: sec
        group: sec
        mode: '0755'
    - name: Create /mnt/sec/db Directory
      become: yes
      become_user: root
      become_method: sudo
      file:
        path: /mnt/sec/db
        state: directory
        owner: postgres
        group: postgres
    - name: Create /var/log/sec Directory
      become: yes
      become_user: root
      become_method: sudo
      file:
        path: /var/log/sec
        state: directory
        owner: root
        group: syslog
        mode: 0755
    - name: Copy FStab File
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.copy:
        src: ./etc/fstab
        dest: /etc/fstab
        owner: root
        mode: '0700'
    - name: Copy SEC Config File
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.copy:
        src: ./.config/sec/config.yaml
        dest: /home/sec/.config/sec/config.yaml
        owner: sec
        mode: '0700'
    - name: Copy Postgres Config Files
      become: yes
      become_user: root
      become_method: sudo
      copy: src=./etc/postgresql/14/main/{{ item.src }} dest=/etc/postgresql/14/main
      with_items:
        - { src: 'conf.d' }
        - { src: 'environment' }
        - { src: 'pg_ctl.conf' }
        - { src: 'pg_hba.conf' }
        - { src: 'pg_ident.conf' }
        - { src: 'postgresql.conf' }
        - { src: 'start.conf' }
    - name: Get SSL Certificates Dir
      become: yes
      become_user: root
      become_method: sudo
      stat:
        path: /etc/letsencrypt/live
      register: certs_dir
    - name: Stop Nginx Service
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.service:
        name: nginx
        state: stopped
      when: not certs_dir.stat.exists
    - name: Generate SSL Certificate
      become: yes
      become_user: root
      become_method: sudo
      shell: certbot certonly --standalone -d equres.com -d www.equres.com -m wojciech@koszek.com -n
      when: not certs_dir.stat.exists
    - name: Copy Nginx Main File
      become: yes
      become_user: root
      become_method: sudo
      copy: src=./etc/nginx/ dest=/etc/nginx/
    - name: Copy Nginx Config File
      become: yes
      become_user: root
      become_method: sudo
      copy: src=./etc/nginx/sites-available/equres.com.conf dest=/etc/nginx/sites-available/
    - name: Create Symbolic link For Nginx Config
      become: yes
      become_user: root
      become_method: sudo
      file:
        src: /etc/nginx/sites-available/equres.com.conf
        dest: /etc/nginx/sites-enabled/equres.com.conf
        state: link
    - name: Create Nginx Cache Directory
      become: yes
      become_user: root
      become_method: sudo
      file:
        path: /var/nginx/cache
        state: directory
    - name: Reload Nginx Service
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.service:
        name: nginx
        state: restarted
    - name: Copy AWStats Confif Files
      become: yes
      become_user: root
      become_method: sudo
      copy: src=./etc/awstats/{{ item.src }} dest=/etc/awstats/ mode=0755
      with_items:
        - { src: 'awstats.equres.com.conf' }
        - { src: 'awstats.conf' }
    - name: Update /var/lib/awstats Directory Permissions
      become: yes
      become_user: root
      become_method: sudo
      file:
        path: /var/lib/awstats
        state: directory
        mode: '0755'
    - name: Copy Redis Config File
      become: yes
      become_user: root
      become_method: sudo
      copy: src=./etc/redis/redis.conf dest=/etc/redis/
    - name: Restart Redis Service
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.service:
        name: redis
        state: restarted
    - name: Create /home/sec/_stats Directory
      become: yes
      become_user: root
      become_method: sudo
      file:
        owner: sec
        path: /home/sec/_stats
        state: directory
        mode: '0755'
    - name: Create /root Directory
      become: yes
      become_user: root
      become_method: sudo
      file:
        path: /root
        state: directory
        mode: '0755'
    - name: Copy Backup Files
      become: yes
      become_user: root
      become_method: sudo
      copy: src=./root/{{ item.src }} dest=/root/ mode=0755
      with_items:
        - { src: 'backup_store.sh' }
        - { src: 'backup_restore.sh' }
        - { src: 'backup_verify.sh' }
        - { src: 'backup_do.sh' }
        - { src: 'db_backup.sh' }
        - { src: 'sec.cron.daily.sh' }
        - { src: 'stats.cron.daily.sh' }
        - { src: 'sitemap.cron.daily.sh' }
        - { src: 'certbot_renew.sh' }
        - { src: 'testing_email.sh' }
        - { src: 'stats_caching.sh' }
        - { src: '.creds' }
    - name: Copy Monit Config File
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.copy:
        src: ./etc/monit/monitrc
        dest: /etc/monit/monitrc
        owner: root
        mode: '0700'
    - name: Copy Monit SEC Config File
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.copy:
        src: ./etc/monit/conf-available/sec
        dest: /etc/monit/conf-available/sec
        owner: root
        mode: '0700'
    - name: Create Symbolic link 
      become: yes
      become_user: root
      become_method: sudo
      file:
        src: /etc/monit/conf-available/sec
        dest: /etc/monit/conf-enabled/sec
        state: link
    - name: Reload Monit Service
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.service:
        name: monit
        state: reloaded
    - name: Copy Syslog-ng Config Files
      become: yes
      become_user: root
      become_method: sudo
      copy: src=./etc/syslog-ng/{{ item.src }} dest=/etc/syslog-ng
      with_items:
        - { src: 'conf.d' }
        - { src: 'patterndb.d' }
        - { src: 'scl.conf' }
        - { src: 'syslog-ng.conf' }
    - name: Reload Syslog-ng Service
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.service:
        name: syslog-ng
        state: reloaded
    - name: Copy Postfix Config File
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.template:
        src: ./etc/postfix/main.cf
        dest: /etc/postfix/main.cf
        owner: sec
        mode: '0777'
    - name: Restart Postfix Service
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.service:
        name: postfix
        state: restarted
    - name: Get /mnt/sec/db Directory Data
      become: yes
      become_user: postgres
      become_method: sudo
      shell: ls -la
      args: 
        chdir: /mnt/sec/db
      register: db_dir
    - name: InitDB in /mnt/sec/db
      become: yes
      become_user: postgres
      command: /usr/lib/postgresql/14/bin/initdb -D /mnt/sec/db
      when: db_dir["stdout_lines"] | length <= 8
    - name: Get /mnt/sec/db Directory Data
      become: yes
      become_user: postgres
      become_method: sudo
      shell: ps -ef|grep postgresql
      register: psql_status
    - name: Start Postgresql Service
      become: yes
      become_user: postgres
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: yes
    - name: Create SEC User in DB
      become_user: postgres
      postgresql_user:
        login_user: postgres
        name: sec
        password: sec_project_2021
        role_attr_flags: SUPERUSER,LOGIN
    - name: Check if database is available
      become: yes
      become_user: postgres
      postgresql_ping:
        db: sec
      register: ping_database
    - name: Create the Database
      become_user: postgres
      postgresql_db:
        name: sec
        owner: sec
        template: template0
        encoding: UTF8
        lc_collate: 'en_US.UTF-8'
        lc_ctype: 'en_US.UTF-8'
      when: ping_database.warnings is defined
    - name: Create /home/sec/.ssh Directory
      become: yes
      become_user: root
      become_method: sudo
      file:
        path: /home/sec/.ssh
        state: directory
        owner: sec
        group: sec
    - name: Add Github Actions Public SSH
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.copy:
        src: ./ssh_deploy_keys/ssh_deploy_key.pub
        dest: /home/sec/.ssh/authorized_keys
        owner: sec
        mode: '0644'
    - name: Get Updated SSL Certificate Cron Job
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.cron:
        name: "Update SSL Certificate"
        minute: "0"
        hour: "12"
        job: '/root/certbot_renew.sh'
    - name: Run Backup Script Everyday at 3 AM
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.cron:
        name: "Backup ZIP & XML"
        minute: "0"
        hour: "3"
        user: sec
        job: "/root/backup_do.sh"
    - name: Generate AWStats HTML File Everyday at 11:55 PM
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.cron:
        name: "Generate AWStats HTML File"
        minute: "55"
        hour: "23"
        user: sec
        job: "/root/stats.cron.daily.sh"
    - name: Run Download Script Everyday at 4 AM
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.cron:
        name: "Download Index & ZIP Files"
        minute: "0"
        hour: "4"
        user: sec
        job: "/root/sec.cron.daily.sh"
    - name: Testing Email Script Twice A Day
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.cron:
        name: "Testing Emails"
        minute: "0"
        hour: "*/12"
        user: sec
        job: "/root/testing_email.sh"
    - name: Run Stats Caching Script Three Times a Day
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.cron:
        name: "Generating & Caching Stats"
        minute: "0"
        hour: "*/8"
        user: sec
        job: "/root/stats_caching.sh"
    - name: Run Sitemap Generating Script Every Day
      become: yes
      become_user: root
      become_method: sudo
      ansible.builtin.cron:
        name: "Generating & Caching Stats"
        minute: "0"
        hour: "2"
        user: sec
        job: "/root/stats_caching.sh"
